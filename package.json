{
  "name": "aws-ec2-static-website-template",
  "description": "Reference implementation for deploying a static website using AWS EC2 servers",
  "version": "1.0.0",
  "author": "Rajnish Srivastava",
  "license": "MIT",
  "config": {
    "awsStackName": "SampleWebApp",
    "awsProfile": "la",
    "awsBucket": "s3-sample-web-app-bucket2020",
    "buildNumber": "1.0.0-230520201612",
    "cfnMainTemplateFile": "file://deploy/master.yaml"
  },
  "scripts": {
    "@comment app": "primary commands for running the application, use 'deploy' for installing the app and 'update' for installing updates",
    "init": "npm install & npm run repo:create",
    "deploy": "npm run web:build & npm run web:package & npm run repo:push & npm run cfn:create",
    "update": "npm run web:build & npm run web:package & npm run repo:push & npm run cfn:update",
    
    "@comment web": "creates the package for deployment",
    "web:build": "cd web & npm install & npm run build",
    "web:package": "mkdirp dist & rimraf dist/* & cd web/build & bestzip ../../dist/app.zip *",
    
    "@comment repo": "repository related commands - where the deployment package is stored, sort of like an elastic container registry...used s3 bucket.",
    "repo:create": "cross-var aws s3api create-bucket --bucket=$npm_package_config_awsBucket --profile=$npm_package_config_awsProfile",
    "repo:push": "cross-var aws s3api put-object --bucket=$npm_package_config_awsBucket --key app-$npm_package_config_buildNumber.zip --body dist/app.zip --profile=$npm_package_config_awsProfile",
    
    "@comment cfn": "cloudformation related scripts",
    "cfn:create": "cross-var aws cloudformation create-stack --stack-name=$npm_package_config_awsStackName --profile=$npm_package_config_awsProfile --template-body=$npm_package_config_cfnMainTemplateFile --capabilities CAPABILITY_IAM --parameters ParameterKey=BuildNumber,ParameterValue=$npm_package_config_buildNumber",
    "cfn:update": "cross-var aws cloudformation update-stack --stack-name=$npm_package_config_awsStackName --profile=$npm_package_config_awsProfile --template-body=$npm_package_config_cfnMainTemplateFile --capabilities CAPABILITY_IAM --parameters ParameterKey=BuildNumber,ParameterValue=$npm_package_config_buildNumber",
    "cfn:delete": "cross-var aws cloudformation delete-stack --stack-name=$npm_package_config_awsStackName --profile=$npm_package_config_awsProfile",
    "cfn:validate": "npm run cfn:validate:master & npm run cfn:validate:vpc & npm run cfn:validate:security-groups & npm run cfn:validate:cloudtrail & npm run cfn:validate:application & npm run cfn:validate:cloudfront",
    "cfn:validate:master": "cross-var aws cloudformation validate-template --template-body=$npm_package_config_cfnMainTemplateFile",
    "cfn:validate:vpc": "aws cloudformation validate-template --template-body=file://deploy/infrastructure/vpc.yaml",
    "cfn:validate:security-groups": "aws cloudformation validate-template --template-body=file://deploy/infrastructure/security-groups.yaml",
    "cfn:validate:cloudtrail": "aws cloudformation validate-template --template-body=file://deploy/infrastructure/cloudtrail.yaml",
    "cfn:validate:application": "aws cloudformation validate-template --template-body=file://deploy/infrastructure/application.yaml",
    "cfn:validate:cloudfront": "aws cloudformation validate-template --template-body=file://deploy/infrastructure/cloudfront.yaml"
  },
  "keywords": [
    "aws",
    "cloudformation",
    "webapp",
    "ec2",
    "react",
    "typescript"
  ],
  "dependencies": {},
  "devDependencies": {
    "cross-var": "^1.1.0",
    "bestzip": "2.1.x",
    "rimraf": "3.0.x",
    "mkdirp": "1.0.x"
  }
}
